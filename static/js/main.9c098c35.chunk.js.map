{"version":3,"sources":["components/Navbar.js","utils/preZero.js","components/TimeRemaining.js","components/CurrentArea.js","components/CurrentInfo.js","utils/amPm.js","components/Prayer.js","components/NextArea.js","components/Footer.js","utils/getMilliseconds.js","utils/getCurrent.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","placeholder","preZero","time","toString","length","concat","TimeRemaining","state","timeDiff","_this","props","_this2","this","setInterval","setState","Date","getHours","getMinutes","Component","CurrentArea","_ref","_ref$currentPrayer","currentPrayer","prayer","components_TimeRemaining","CurrentInfo","start","end","amPm","splittedTime","split","hour","get12Format","Prayer","NextArea","_ref$prayers","prayers","today","tomorrow","Object","keys","map","key","Footer","href","getMilliseconds","setHours","setMinutes","setSeconds","getTime","getCurrent","startActual","endActual","hourDiff","minutesDiff","todayMS","tomorrowMS","timeNow","now","forEach","timeActual","App","getLocation","navigator","geolocation","getCurrentPosition","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref$coords","latitude","longitude","timestamp","_ref3","data","_ref4","nextData","wrap","_context","prev","next","coords","Math","floor","axios","get","sent","timings","stop","_x","apply","arguments","_this$state","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"sSAEeA,EAAA,kBACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,eAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeC,YAAY,2BCR3CC,EAAU,SAAAC,GAErB,OAA0B,IADNA,EAAKC,WACVC,OACb,IAAAC,OAAWH,GAENA,GCmBMI,6MAnBbC,MAAQ,CACNC,SAAUC,EAAKC,MAAMF,6FAGH,IAAAG,EAAAC,KACVJ,EAAaI,KAAKF,MAAlBF,SACRK,YAAY,WACVF,EAAKG,SAAS,CAAEN,SAAU,IAAIO,KAAKP,EAAY,QAC9C,sCAGI,IACCA,EAAaI,KAAKL,MAAlBC,SACR,OACEZ,EAAAC,EAAAC,cAAA,UAAKG,EAAQO,EAASQ,YAAtB,IAAoCf,EAAQO,EAASS,sBAf/BC,aCCbC,EAAA,SAAAC,GAA6C,IAAAC,EAAAD,EAA1CE,cAAiBC,EAAyBF,EAAzBE,OAAQf,EAAiBa,EAAjBb,SACzC,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAKyB,IAEP3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC0B,EAAD,CAAehB,SAAUA,QCdpBiB,EAAA,SAAAL,GAAA,IAAAC,EAAAD,EAAGE,cAAyBI,GAA5BL,EAAoBE,OAApBF,EAA4BK,OAAOC,EAAnCN,EAAmCM,IAAnC,OACb/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,6BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAK4B,IAEP9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAK6B,MCZEC,EAAO,SAAC1B,GACjB,IAAM2B,EAAe3B,EAAK4B,MAAM,KAC1BC,EAAOF,EAAa,GACpBG,EAAcH,EAAa,GAAK,GAKtC,OAAwB,IAAhBG,EAAqB,MAAA3B,OAAkBJ,EAAQ4B,EAAa,IAAvCE,EAAO,GAAP,aAA0FA,EAAO,GAAP,GAAA1B,OAAeJ,EAAQ+B,GAAvB,KAAA3B,OAAuCJ,EAAQ4B,EAAa,IAA5D,UAAAxB,OAA0EJ,EAAQ+B,GAAlF,KAAA3B,OAAkGJ,EAAQ4B,EAAa,IAAvH,QCN3HI,EAAA,SAAeb,GAAsB,IAAnBG,EAAmBH,EAAnBG,OAAQrB,EAAWkB,EAAXlB,KACxB,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAKyB,GACL3B,EAAAC,EAAAC,cAAA,0BAAiBF,EAAAC,EAAAC,cAAA,cAAS8B,EAAK1B,OCJtBgC,EAAA,SAAAd,GAAA,IAAAe,EAAAf,EAAGgB,QAAWC,EAAdF,EAAcE,MAAOC,EAArBH,EAAqBG,SAArB,OACb1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,mBACCyC,OAAOC,KAAKH,GAAOI,IAAI,SAAAlB,GACtB,MAAc,YAAXA,GAAmC,WAAXA,GAAkC,UAAXA,GAAiC,aAAXA,GAEjE3B,EAAAC,EAAAC,cAACmC,EAAD,CAAQS,IAAKnB,EAAQA,OAAQA,EAAQrB,KAAMmC,EAAMd,QAG5D3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBACCyC,OAAOC,KAAKF,GAAUG,IAAI,SAAAlB,GACzB,MAAc,YAAXA,GAAmC,WAAXA,GAAkC,UAAXA,GAAiC,aAAXA,GAEjE3B,EAAAC,EAAAC,cAACmC,EAAD,CAAQS,IAAKnB,EAAQA,OAAQA,EAAQrB,KAAMmC,EAAMd,OAE1D3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yBCxBO6C,EAAA,kBACX/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,uQAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,wBAAR,MACEF,EAAAC,EAAAC,cAAA,KAAG8C,KAAK,sBAAR,qBCTGC,EAAkB,SAAAtB,GAC7B,IAAMrB,EAAO,IAAIa,KACXc,EAAeN,EAAOO,MAAM,KAIlC,OAHA5B,EAAK4C,SAASjB,EAAa,IAC3B3B,EAAK6C,WAAWlB,EAAa,IAC7B3B,EAAK8C,WAAW,GACT9C,EAAK+C,WCHDC,EAAa,SAACb,EAAOC,GAChC,IAAIhB,EAgBA6B,EAAaC,EAAW1B,EAAOC,EAAK0B,EAAUC,EAf9CC,EAAU,GACdC,EAAa,GACPC,EAAU1C,KAAK2C,MACrBnB,OAAOC,KAAKH,GAAOsB,QAAQ,SAAApC,GACzBgC,EAAQhC,GAAU,CAChBA,SACAqC,WAAYvB,EAAMd,GAClBrB,KAAM2C,EAAgBR,EAAMd,KAE9BiC,EAAWjC,GAAU,CACnBA,SACAqC,WAAYtB,EAASf,GACrBrB,KAAM2C,EAAgBR,EAAMd,OAIhC,IAAMf,EAAW,IAAIO,KACrB,IAAI,IAAIQ,KAAUgC,EAAS,CACzB,GAAc,SAAXhC,GAAqBkC,GAAWF,EAAQhC,GAAQrB,MAAQuD,EAAUF,EAAO,QAAYrD,KAAM,CAC5FiD,EAAcI,EAAQhC,GAAQrB,KAC9BkD,EAAYG,EAAO,QAAYrD,KAC/BwB,EAAQ,IAAIX,KAAKoC,GACjBE,EAAW,GAAK,IAAItC,KAAK0C,GAASzC,WAClCU,EAAQE,EAAI,GAAAvB,OAAKqB,EAAMV,WAAX,KAAAX,OAA2BqB,EAAMT,eAE7CoC,IADA1B,EAAM,IAAIZ,KAAKqC,IACCpC,WAChBsC,EAAc3B,EAAIV,aAAe,IAAIF,KAAK0C,GAASxC,aACnDU,EAAMC,EAAI,GAAAvB,OAAIsB,EAAIX,WAAR,KAAAX,OAAsBsB,EAAIV,eACpCT,EAASsC,SAASO,GAClB7C,EAASuC,WAAWO,GACpBhC,EAAiB,CACfC,SACAf,WACAkB,QACAC,OAEF,MACK,GAAc,UAAXJ,GAAsBkC,GAAWF,EAAQhC,GAAQrB,MAAQuD,EAAUF,EAAO,IAAQrD,KAAM,CAChGiD,EAAcI,EAAQhC,GAAQrB,KAC9BkD,EAAYG,EAAO,IAAQrD,KAC3BwB,EAAQ,IAAIX,KAAKoC,GACjBE,EAAW,GAAK,IAAItC,KAAK0C,GAASzC,WAClCU,EAAQE,EAAI,GAAAvB,OAAKqB,EAAMV,WAAX,KAAAX,OAA2BqB,EAAMT,eAE7CoC,IADA1B,EAAM,IAAIZ,KAAKqC,IACCpC,WAChBsC,EAAc3B,EAAIV,aAAe,IAAIF,KAAK0C,GAASxC,aACnDU,EAAMC,EAAI,GAAAvB,OAAIsB,EAAIX,WAAR,KAAAX,OAAsBsB,EAAIV,eACpCT,EAASsC,SAASO,GAClB7C,EAASuC,WAAWO,GACpBhC,EAAiB,CACfC,SACAf,WACAkB,QACAC,OAEF,MACK,GAAc,QAAXJ,GAAoBkC,GAAWF,EAAQhC,GAAQrB,MAAQuD,EAAUF,EAAO,OAAWrD,KAAM,CACjGiD,EAAcI,EAAQhC,GAAQrB,KAC9BkD,EAAYG,EAAO,OAAWrD,KAC9BwB,EAAQ,IAAIX,KAAKoC,GACjBE,EAAW,GAAK,IAAItC,KAAK0C,GAASzC,WAClCU,EAAQE,EAAI,GAAAvB,OAAKqB,EAAMV,WAAX,KAAAX,OAA2BqB,EAAMT,eAE7CoC,IADA1B,EAAM,IAAIZ,KAAKqC,IACCpC,WAChBsC,EAAc3B,EAAIV,aAAe,IAAIF,KAAK0C,GAASxC,aACnDU,EAAMC,EAAI,GAAAvB,OAAIsB,EAAIX,WAAR,KAAAX,OAAsBsB,EAAIV,eACpCT,EAASsC,SAASO,GAClB7C,EAASuC,WAAWO,GACpBhC,EAAiB,CACfC,SACAf,WACAkB,QACAC,OAEF,MACK,GAAc,YAAXJ,GAAwBkC,GAAWF,EAAQhC,GAAQrB,MAAQuD,EAAUF,EAAO,KAASrD,KAAM,CACnGiD,EAAcI,EAAQhC,GAAQrB,KAC9BkD,EAAYG,EAAO,KAASrD,KAC5BwB,EAAQ,IAAIX,KAAKoC,GACjBE,EAAW,GAAK,IAAItC,KAAK0C,GAASzC,WAClCU,EAAQE,EAAI,GAAAvB,OAAKqB,EAAMV,WAAX,KAAAX,OAA2BqB,EAAMT,eAE7CoC,IADA1B,EAAM,IAAIZ,KAAKqC,IACCpC,WAChBsC,EAAc3B,EAAIV,aAAe,IAAIF,KAAK0C,GAASxC,aACnDU,EAAMC,EAAI,GAAAvB,OAAIsB,EAAIX,WAAR,KAAAX,OAAsBsB,EAAIV,eACpCT,EAASsC,SAASO,GAClB7C,EAASuC,WAAWO,GACpBhC,EAAiB,CACfC,SACAf,WACAkB,QACAC,OAEF,MACK,GAAc,SAAXJ,GAAoBkC,GAAWF,EAAQhC,GAAQrB,MAAQuD,EAAUD,EAAU,SAAatD,KAAQ,MAAsB,CAC9HiD,EAAcI,EAAQhC,GAAQrB,KAC9BkD,EAAYI,EAAU,SAAatD,KAAQ,MAC3CwB,EAAQ,IAAIX,KAAKoC,GACjBE,EAAW,GAAK,IAAItC,KAAK0C,GAASzC,WAClCU,EAAQE,EAAI,GAAAvB,OAAKqB,EAAMV,WAAX,KAAAX,OAA2BqB,EAAMT,eAE7CoC,IADA1B,EAAM,IAAIZ,KAAKqC,IACCpC,WAChBsC,EAAc3B,EAAIV,aAAe,IAAIF,KAAK0C,GAASxC,aACnDU,EAAMC,EAAI,GAAAvB,OAAIsB,EAAIX,WAAR,KAAAX,OAAsBsB,EAAIV,eACpCT,EAASsC,SAASO,GAClB7C,EAASuC,WAAWO,GACpBhC,EAAiB,CACfC,SACAf,WACAkB,QACAC,OAEF,MAEAL,EAAiB,CACfC,OAAQ,QACRG,MAAO,QACPC,IAAK,SAIX,OAAOL,GCvEMuC,oNA1CbtD,MAAQ,CACN6B,QAAS,KACTd,cAAe,QAOjBwC,YAAc,WACZC,UAAUC,YAAYC,mBAAtB,eAAAC,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAA6B,EAAAvE,EAAAwE,KAAyC,SAAAC,EAAAlD,GAAA,IAAAmD,EAAAC,EAAAC,EAAAC,EAAAxE,EAAAyE,EAAAC,EAAAC,EAAAC,EAAA1C,EAAAd,EAAA,OAAA8C,EAAAvE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAX,EAAAnD,EAAO+D,OAAUX,EAAjBD,EAAiBC,SAAUC,EAA3BF,EAA2BE,UAAaC,EAAxCtD,EAAwCsD,UACzExE,EAAQkF,KAAKC,MAAMX,EAAU,KADIM,EAAAE,KAAA,EAERI,IAAMC,IAAN,qCAAAlF,OAA+CH,EAA/C,cAAAG,OAAgEmE,EAAhE,eAAAnE,OAAsFoE,IAF9E,cAAAE,EAAAK,EAAAQ,KAEzBZ,EAFyBD,EAEjCC,KAAQA,KAFyBI,EAAAE,KAAA,EAGEI,IAAMC,IAAN,qCAAAlF,OAAgDH,EAAQ,MAAxD,cAAAG,OAAmFmE,EAAnF,eAAAnE,OAAyGoE,IAH3G,OAAAI,EAAAG,EAAAQ,KAGnBV,EAHmBD,EAGjCD,KAAQA,KACdA,EAAOA,EAAKa,QACZX,EAAWA,EAASW,QAKdnE,EAAgB4B,GAJhBd,EAAU,CACdC,MAAOuC,EACPtC,SAAUwC,IAE6BzC,MAAOD,EAAQE,UACxD7B,EAAKK,SAAS,CAAEsB,UAASd,kBAXc,yBAAA0D,EAAAU,SAAApB,EAAA1D,SAAzC,gBAAA+E,GAAA,OAAAzB,EAAA0B,MAAAhF,KAAAiF,YAAA,wFAJAjF,KAAKkD,+CAmBE,IAAAgC,EAC4BlF,KAAKL,MAAhC6B,EADD0D,EACC1D,QAASd,EADVwE,EACUxE,cACjB,OAAIc,EAKFxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqB,EAAD,CAAaG,cAAeA,IAC5B1B,EAAAC,EAAAC,cAAC2B,EAAD,CAAaH,cAAeA,IAC5B1B,EAAAC,EAAAC,cAACoC,EAAD,CAAUE,QAASA,IACnBxC,EAAAC,EAAAC,cAAC6C,EAAD,OARK/C,EAAAC,EAAAC,cAAA,2BA7BKoB,cCAE6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBzC,WACrBA,UAAU0C,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9c098c35.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default () =>\r\n    <div className=\"navbar\">\r\n        <div className=\"brand\">\r\n            PrayerRange\r\n        </div>\r\n        <div className=\"search\">\r\n            <input className=\"input search\" placeholder=\"Enter Your Location\" />\r\n        </div>\r\n    </div>;","export const preZero = time => {\r\n  const numberToStr = time.toString();\r\n  if(numberToStr.length === 1) {\r\n    return `0${time}`;\r\n  }\r\n  return time;\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { preZero } from '../utils/preZero';\r\n\r\nclass TimeRemaining extends Component {\r\n  state = {\r\n    timeDiff: this.props.timeDiff\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { timeDiff } = this.props;\r\n    setInterval(() => {\r\n      this.setState({ timeDiff: new Date(timeDiff - (1000 * 60)) })\r\n    }, 1000 * 60);\r\n  }\r\n\r\n  render() {\r\n    const { timeDiff } = this.state;\r\n    return (\r\n      <h2>{preZero(timeDiff.getHours())}:{preZero(timeDiff.getMinutes())}</h2>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeRemaining;\r\n","import React from 'react';\r\n\r\nimport Navbar from './Navbar';\r\nimport TimeRemaining from './TimeRemaining';\r\n\r\nexport default ({ currentPrayer: { prayer, timeDiff } }) => {\r\n  return (\r\n    <div className=\"current-area\">\r\n      <Navbar />\r\n      <div className=\"current-details\">\r\n        <div className=\"current-salaat\">\r\n          <p>It's time for</p>\r\n          <h2>{prayer}</h2>\r\n        </div>\r\n        <div className=\"time-remaining\">\r\n          <p>Time Remaining</p>\r\n          <TimeRemaining timeDiff={timeDiff} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default ({ currentPrayer: { prayer, start, end } }) =>\r\n  <div className=\"current-info\">\r\n    <div className=\"current location\">\r\n      <p>Location</p>\r\n      <h4>Kharar, Mohali</h4>\r\n    </div>\r\n    <div className=\"current started\">\r\n      <p>Started</p>\r\n      <h4>{start}</h4>\r\n    </div>\r\n    <div className=\"current will-end\">\r\n      <p>Will End</p>\r\n      <h4>{end}</h4>\r\n    </div>\r\n  </div>\r\n","import { preZero } from './preZero';\r\n\r\nexport const amPm = (time) => {\r\n    const splittedTime = time.split(':');\r\n    const hour = splittedTime[0];\r\n    const get12Format = splittedTime[0] % 12;\r\n    // if(get12Format === 0)\r\n    //   return hour < 12 ? `12:${splittedTime[1]} AM` : `12:${splittedTime[1]} PM`;\r\n    //\r\n    // return hour < 12 ? `${get12Format}:${splittedTime[1]} AM` : `${get12Format}:${splittedTime[1]} PM`;\r\n    return (get12Format === 0 ? (hour < 12 ? `12:${preZero(splittedTime[1])} AM` : `12:${preZero(splittedTime[1])} PM`) : (hour < 12 ? `${preZero(get12Format)}:${preZero(splittedTime[1])} AM` : `${preZero(get12Format)}:${preZero(splittedTime[1])} PM`))\r\n}\r\n","import React from 'react';\r\n\r\nimport { amPm } from '../utils/amPm';\r\n\r\nexport default ({ prayer, time }) => {\r\n  return (\r\n    <div className=\"prayer general\">\r\n      <h4>{prayer}</h4>\r\n      <p>Will Start At <strong>{amPm(time)}</strong></p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nimport Prayer from './Prayer';\r\n\r\nexport default ({ prayers: { today, tomorrow } }) =>\r\n  <div className=\"next-area\">\r\n    <div className=\"section-title\">\r\n      <h3>Next Prayers</h3>\r\n    </div>\r\n    <div className=\"prayers today\">\r\n      <h4>Today</h4>\r\n      {Object.keys(today).map(prayer => {\r\n        if(prayer === 'Sunrise' || prayer === 'Sunset' || prayer === 'Imsak' || prayer === 'Midnight')\r\n          return true;\r\n        return <Prayer key={prayer} prayer={prayer} time={today[prayer]} />\r\n      })}\r\n    </div>\r\n    <div className=\"prayers tomorrow\">\r\n      <h4>Tomorrow</h4>\r\n      {Object.keys(tomorrow).map(prayer => {\r\n        if(prayer === 'Sunrise' || prayer === 'Sunset' || prayer === 'Imsak' || prayer === 'Midnight')\r\n          return true;\r\n        return <Prayer key={prayer} prayer={prayer} time={today[prayer]} />\r\n      })}\r\n      <div className=\"prayer general done\">\r\n        <h4>Done Demo</h4>\r\n        <p>Finished</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import React from 'react';\r\n\r\nexport default () =>\r\n    <div className=\"footer-area\">\r\n      <div className=\"footer hadis\">\r\n        <blockquote>Consider if one of you had a river by his door in which he bathed five times a day. Would any filth remain on him?” They said, “No.” Then the Prophet replied: “Likewise, Allah wipes away sins with the five daily prayers.</blockquote>\r\n      </div>\r\n      <div className=\"footer credit\">\r\n        <p>With <strong>❤</strong> By\r\n          <a href=\"https://zonayed.me\">Zonayed Ahmed</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n","export const getMilliseconds = prayer => {\r\n  const time = new Date();\r\n  const splittedTime = prayer.split(':');\r\n  time.setHours(splittedTime[0]);\r\n  time.setMinutes(splittedTime[1]);\r\n  time.setSeconds(0);\r\n  return time.getTime();\r\n}\r\n","import { getMilliseconds } from './getMilliseconds';\r\nimport { amPm } from './amPm';\r\n\r\nexport const getCurrent = (today, tomorrow) => {\r\n  let currentPrayer;\r\n  let todayMS = {},\r\n  tomorrowMS = {};\r\n  const timeNow = Date.now();\r\n  Object.keys(today).forEach(prayer => {\r\n    todayMS[prayer] = {\r\n      prayer,\r\n      timeActual: today[prayer],\r\n      time: getMilliseconds(today[prayer])\r\n    };\r\n    tomorrowMS[prayer] = {\r\n      prayer,\r\n      timeActual: tomorrow[prayer],\r\n      time: getMilliseconds(today[prayer])\r\n    };\r\n  })\r\n  let startActual, endActual, start, end, hourDiff, minutesDiff;\r\n  const timeDiff = new Date();\r\n  for(let prayer in todayMS) {\r\n    if(prayer === 'Fajr' && timeNow >= todayMS[prayer].time && timeNow < todayMS['Sunrise'].time) {\r\n      startActual = todayMS[prayer].time;\r\n      endActual = todayMS['Sunrise'].time;\r\n      start = new Date(startActual);\r\n      hourDiff = 24 - new Date(timeNow).getHours();\r\n      start = amPm(`${(start.getHours())}:${(start.getMinutes())}`);\r\n      end = new Date(endActual);\r\n      hourDiff += end.getHours();\r\n      minutesDiff = end.getMinutes() - new Date(timeNow).getMinutes();\r\n      end = amPm(`${end.getHours()}:${end.getMinutes()}`);\r\n      timeDiff.setHours(hourDiff);\r\n      timeDiff.setMinutes(minutesDiff);\r\n      currentPrayer =  {\r\n        prayer,\r\n        timeDiff,\r\n        start,\r\n        end\r\n      }\r\n      break;\r\n    } else if(prayer === 'Dhuhr' && timeNow >= todayMS[prayer].time && timeNow < todayMS['Asr'].time) {\r\n      startActual = todayMS[prayer].time;\r\n      endActual = todayMS['Asr'].time;\r\n      start = new Date(startActual);\r\n      hourDiff = 24 - new Date(timeNow).getHours();\r\n      start = amPm(`${(start.getHours())}:${(start.getMinutes())}`);\r\n      end = new Date(endActual);\r\n      hourDiff += end.getHours();\r\n      minutesDiff = end.getMinutes() - new Date(timeNow).getMinutes();\r\n      end = amPm(`${end.getHours()}:${end.getMinutes()}`);\r\n      timeDiff.setHours(hourDiff);\r\n      timeDiff.setMinutes(minutesDiff);\r\n      currentPrayer =  {\r\n        prayer,\r\n        timeDiff,\r\n        start,\r\n        end\r\n      }\r\n      break;\r\n    } else if(prayer === 'Asr' && timeNow >= todayMS[prayer].time && timeNow < todayMS['Sunset'].time) {\r\n      startActual = todayMS[prayer].time;\r\n      endActual = todayMS['Sunset'].time;\r\n      start = new Date(startActual);\r\n      hourDiff = 24 - new Date(timeNow).getHours();\r\n      start = amPm(`${(start.getHours())}:${(start.getMinutes())}`);\r\n      end = new Date(endActual);\r\n      hourDiff += end.getHours();\r\n      minutesDiff = end.getMinutes() - new Date(timeNow).getMinutes();\r\n      end = amPm(`${end.getHours()}:${end.getMinutes()}`);\r\n      timeDiff.setHours(hourDiff);\r\n      timeDiff.setMinutes(minutesDiff);\r\n      currentPrayer =  {\r\n        prayer,\r\n        timeDiff,\r\n        start,\r\n        end\r\n      }\r\n      break;\r\n    } else if(prayer === 'Maghrib' && timeNow >= todayMS[prayer].time && timeNow < todayMS['Isha'].time) {\r\n      startActual = todayMS[prayer].time;\r\n      endActual = todayMS['Isha'].time;\r\n      start = new Date(startActual);\r\n      hourDiff = 24 - new Date(timeNow).getHours();\r\n      start = amPm(`${(start.getHours())}:${(start.getMinutes())}`);\r\n      end = new Date(endActual);\r\n      hourDiff += end.getHours();\r\n      minutesDiff = end.getMinutes() - new Date(timeNow).getMinutes();\r\n      end = amPm(`${end.getHours()}:${end.getMinutes()}`);\r\n      timeDiff.setHours(hourDiff);\r\n      timeDiff.setMinutes(minutesDiff);\r\n      currentPrayer =  {\r\n        prayer,\r\n        timeDiff,\r\n        start,\r\n        end\r\n      }\r\n      break;\r\n    } else if(prayer === 'Isha'&& timeNow >= todayMS[prayer].time && timeNow < tomorrowMS['Midnight'].time + (24 * 60 * 60 * 1000)) {\r\n      startActual = todayMS[prayer].time;\r\n      endActual = tomorrowMS['Midnight'].time + (24 * 60 * 60 * 1000);\r\n      start = new Date(startActual);\r\n      hourDiff = 24 - new Date(timeNow).getHours();\r\n      start = amPm(`${(start.getHours())}:${(start.getMinutes())}`);\r\n      end = new Date(endActual);\r\n      hourDiff += end.getHours();\r\n      minutesDiff = end.getMinutes() - new Date(timeNow).getMinutes();\r\n      end = amPm(`${end.getHours()}:${end.getMinutes()}`);\r\n      timeDiff.setHours(hourDiff);\r\n      timeDiff.setMinutes(minutesDiff);\r\n      currentPrayer =  {\r\n        prayer,\r\n        timeDiff,\r\n        start,\r\n        end\r\n      }\r\n      break;\r\n    } else {\r\n      currentPrayer =  {\r\n        prayer: '00:00',\r\n        start: '00:00',\r\n        end: '00:00'\r\n      }\r\n    }\r\n  }\r\n  return currentPrayer;\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport CurrentArea from './components/CurrentArea';\r\nimport CurrentInfo from './components/CurrentInfo';\r\nimport NextArea from './components/NextArea';\r\nimport Footer from './components/Footer';\r\n\r\nimport { getCurrent } from './utils/getCurrent';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    prayers: null,\r\n    currentPrayer: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLocation();\r\n  }\r\n\r\n  getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition(async({coords: { latitude, longitude }, timestamp }) => {\r\n      const time = (Math.floor(timestamp/1000));\r\n      let { data: { data } } = await axios.get(`http://api.aladhan.com/v1/timings/${time}?latitude=${latitude}&longitude=${longitude}`);\r\n      let { data: { data: nextData } } = await axios.get(`http://api.aladhan.com/v1/timings/${(time + (24 * 60 * 60))}?latitude=${latitude}&longitude=${longitude}`);\r\n      data = data.timings;\r\n      nextData = nextData.timings;\r\n      const prayers = {\r\n        today: data,\r\n        tomorrow: nextData\r\n      }\r\n      const currentPrayer = getCurrent(prayers.today, prayers.tomorrow);\r\n      this.setState({ prayers, currentPrayer });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { prayers, currentPrayer } = this.state;\r\n    if(!prayers) {\r\n      return <p>Loading</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <CurrentArea currentPrayer={currentPrayer} />\r\n        <CurrentInfo currentPrayer={currentPrayer} />\r\n        <NextArea prayers={prayers} />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}